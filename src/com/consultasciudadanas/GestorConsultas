package com.consultasciudadanas;

import java.util.*;

public class GestorConsultas {
    private List<Ciudadano> ciudadanos;
    private List<Consulta> consultas;
    private Scanner sc;

    public GestorConsultas(Scanner sc) {
        this.ciudadanos = new ArrayList<>();
        this.consultas = new ArrayList<>();
        this.sc = sc;
    }

    public List<Ciudadano> getCiudadanos() {
        return ciudadanos;
    }

    public List<Consulta> getConsultas() {
        return consultas;
    }

    // ======================
    // DATOS INICIALES
    // ======================
    public void cargarDatosIniciales() {
        Ciudadano c1 = new Ciudadano("12345678", "Juan Pérez", "Santiago", 35);
        Ciudadano c2 = new Ciudadano("87654321", "Ana Ruiz", "Valparaíso", 28);
        ciudadanos.add(c1);
        ciudadanos.add(c2);

        Consulta cons1 = new Consulta(1, "Consulta Transporte", "2025-08-31");
        Tema tema1 = new Tema(1, "Transporte Público");
        Tema tema2 = new Tema(2, "Transporte Privado");

        Pregunta p1 = new Pregunta(1, "¿Está satisfecho con el transporte público?");
        Pregunta p2 = new Pregunta(2, "¿Usa transporte público diariamente?");
        Pregunta p3 = new Pregunta(3, "¿Usa transporte privado frecuentemente?");

        tema1.agregarPregunta(p1);
        tema1.agregarPregunta(p2);
        tema2.agregarPregunta(p3);

        cons1.agregarTema(tema1);
        cons1.agregarTema(tema2);

        consultas.add(cons1);
    }

    public void registrarCiudadano() {
        String rut;
        while (true) {
            System.out.print("RUT (solo números, si termina en K se convertirá en 0): ");
            rut = sc.nextLine().trim().toUpperCase();
            if (rut.endsWith("K")) {
                rut = rut.substring(0, rut.length() - 1) + "0";
            }
            if (rut.matches("\\d+")) break;
            System.out.println("RUT inválido. Solo números o K al final permitido.");
        }

        System.out.print("Nombre: ");
        String nombre = sc.nextLine();
        System.out.print("Comuna: ");
        String comuna = sc.nextLine();

        int edad = 0;
        while (true) {
            System.out.print("Edad: ");
            try {
                edad = sc.nextInt();
                if (edad < 0) {
                    System.out.println("Ingrese una edad válida.");
                    continue;
                }
                sc.nextLine();
                break;
            } catch (InputMismatchException e) {
                System.out.println("Error: debe ingresar un número entero.");
                sc.nextLine();
            }
        }

        ciudadanos.add(new Ciudadano(rut, nombre, comuna, edad));
        System.out.println(" Ciudadano registrado correctamente.");
    }

    public void crearConsulta() {
        System.out.print("ID Consulta: ");
        int idc = sc.nextInt(); sc.nextLine();
        System.out.print("Título: ");
        String titulo = sc.nextLine();
        System.out.print("Fecha: ");
        String fecha = sc.nextLine();

        Consulta consulta = new Consulta(idc, titulo, fecha);
        consultas.add(consulta);

        System.out.print("¿Cuántos temas? ");
        int nt = sc.nextInt(); sc.nextLine();
        for (int i=0; i<nt; i++) {
            System.out.print("ID Tema: ");
            int idt = sc.nextInt(); sc.nextLine();
            System.out.print("Nombre tema: ");
            String tnombre = sc.nextLine();
            Tema tema = new Tema(idt, tnombre);
            consulta.agregarTema(tema);

            System.out.print("¿Cuántas preguntas? ");
            int np = sc.nextInt(); sc.nextLine();
            for (int j=0; j<np; j++) {
                System.out.print("ID Pregunta: ");
                int idp = sc.nextInt(); sc.nextLine();
                System.out.print("Enunciado: ");
                String en = sc.nextLine();
                tema.agregarPregunta(new Pregunta(idp, en));
            }
        }
    }

    public void votar() {
        if (consultas.isEmpty() || ciudadanos.isEmpty()) {
            System.out.println(" Debe existir al menos un ciudadano y una consulta.");
            return;
        }
        System.out.println("Seleccione ciudadano: ");
        for (int i=0; i<ciudadanos.size(); i++)
            System.out.println((i+1) + ". " + ciudadanos.get(i));
        int ci = sc.nextInt()-1; sc.nextLine();

        System.out.println("Seleccione consulta: ");
        for (int i=0; i<consultas.size(); i++)
            System.out.println((i+1) + ". " + consultas.get(i));
        int co = sc.nextInt()-1; sc.nextLine();
        Consulta cons = consultas.get(co);

        for (Tema tema : cons.getTemas().values()) {
            for (Pregunta p : tema.getPreguntas().values()) {
                System.out.print(p.getEnunciado() + " (SÍ/NO): ");
                String resp = sc.nextLine();
                p.agregarVoto(new Voto(ciudadanos.get(ci), resp));
            }
        }
    }

    public void verResultados() {
        if (consultas.isEmpty()) {
            System.out.println("No existen consultas registradas.");
            return;
        }
        for (Consulta con : consultas) {
            System.out.println("Consulta: " + con.getTitulo());
            boolean tieneVotos = false;
            for (Tema tema : con.getTemas().values()) {
                System.out.println("  Tema: " + tema.getNombre());
                for (Pregunta p : tema.getPreguntas().values()) {
                    System.out.println("    Pregunta: " + p.getEnunciado());
                    if (p.getVotos().isEmpty()) {
                        System.out.println("      No hay votos aún.");
                    } else {
                        tieneVotos = true;
                        p.mostrarResultados();
                    }
                }
            }
            if (!tieneVotos) {
                System.out.println("  Ninguna pregunta de esta consulta tiene votos.");
            }
        }
    }

    public void verVotantesYConsultas() {
        if (consultas.isEmpty()) {
            System.out.println("No existen consultas registradas.");
            return;
        } else if (ciudadanos.isEmpty()) {
            System.out.println("No existen ciudadanos registrados.");
            return;
        }

        System.out.println("Ciudadanos registrados:");
        for (Ciudadano ciu : ciudadanos) {
            System.out.println(" - " + ciu);
        }

        System.out.println("\nCiudadanos y consultas:");
        for (Consulta con : consultas) {
            System.out.println("Consulta: " + con.getTitulo());
            boolean tieneVotos = false;
            for (Tema tema : con.getTemas().values()) {
                System.out.println("  Tema: " + tema.getNombre());
                for (Pregunta p : tema.getPreguntas().values()) {
                    System.out.println("    Pregunta: " + p.getEnunciado());
                    if (p.getVotos().isEmpty()) {
                        System.out.println("      No hay votos aún.");
                    } else {
                        tieneVotos = true;
                        for (Voto v : p.getVotos()) {
                            System.out.println("      Votante: " + v.getCiudadano().getNombre() 
                                             + " - Respuesta: " + v.getRespuesta());
                        }
                    }
                }
            }
            if (!tieneVotos) {
                System.out.println("  Ninguna pregunta de esta consulta tiene votos.");
            }
        }
    }
}
